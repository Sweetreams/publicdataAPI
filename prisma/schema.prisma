generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "prisma+postgres://accelerate.prisma-data.net/?api_key=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcGlfa2V5IjoiZDgzYmE3NTgtYzkzYy00NmUxLWFmMDYtNDRlYjAyMGZhMzc2IiwidGVuYW50X2lkIjoiODYwMmVmNGM5ZjA2ODQ5OTNiNjkwMmJiMDQ3YjlkOGI3M2EyY2E2NWFlYzc4OGVkODg3NjA2MDI1ZTU1ZjE0YiIsImludGVybmFsX3NlY3JldCI6IjBmNjQ0OGI5LTNhNmUtNGUyNS1hMzc4LWI3NmEzNTQ5MGI2MyJ9.PAbWHaeo98-JXsstUoEwL0gpUiXgCYk4sBOVlRNxZjY"
}

model User {
  id             Int     @id @default(autoincrement())
  email          String  @unique
  login          String  @unique
  bcryptpassword String
  name           String?
  role           ROLE    @default(user)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SetDB {
  id   Int  @id @default(autoincrement())
  data Json

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  DataSet DataSet[]
}

model DataSet {
  id     Int   @id @default(autoincrement())
  setdb  SetDB @relation(fields: [id_set], references: [id])
  id_set Int
  data   Json

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ROLE {
  user
  admin
}
